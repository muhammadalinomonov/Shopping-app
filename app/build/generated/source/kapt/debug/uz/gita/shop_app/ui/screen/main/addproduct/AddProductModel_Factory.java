// Generated by Dagger (https://dagger.dev).
package uz.gita.shop_app.ui.screen.main.addproduct;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import uz.gita.shop_app.domain.repository.ShopRepository;
import uz.gita.shopappexam.data.locale.SharedPref;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AddProductModel_Factory implements Factory<AddProductModel> {
  private final Provider<ShopRepository> repositoryProvider;

  private final Provider<SharedPref> sharedPrefProvider;

  private final Provider<AddProductScreenContract.Direction> directionProvider;

  public AddProductModel_Factory(Provider<ShopRepository> repositoryProvider,
      Provider<SharedPref> sharedPrefProvider,
      Provider<AddProductScreenContract.Direction> directionProvider) {
    this.repositoryProvider = repositoryProvider;
    this.sharedPrefProvider = sharedPrefProvider;
    this.directionProvider = directionProvider;
  }

  @Override
  public AddProductModel get() {
    return newInstance(repositoryProvider.get(), sharedPrefProvider.get(), directionProvider.get());
  }

  public static AddProductModel_Factory create(Provider<ShopRepository> repositoryProvider,
      Provider<SharedPref> sharedPrefProvider,
      Provider<AddProductScreenContract.Direction> directionProvider) {
    return new AddProductModel_Factory(repositoryProvider, sharedPrefProvider, directionProvider);
  }

  public static AddProductModel newInstance(ShopRepository repository, SharedPref sharedPref,
      AddProductScreenContract.Direction direction) {
    return new AddProductModel(repository, sharedPref, direction);
  }
}
