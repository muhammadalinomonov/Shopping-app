// Generated by Dagger (https://dagger.dev).
package uz.gita.shop_app.ui.screen.signup;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import uz.gita.shop_app.domain.repository.AuthRepository;
import uz.gita.shopappexam.data.locale.SharedPref;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SignUpModel_Factory implements Factory<SignUpModel> {
  private final Provider<AuthRepository> repositoryProvider;

  private final Provider<SharedPref> sharedPrefProvider;

  private final Provider<SignUpDirection> directionProvider;

  public SignUpModel_Factory(Provider<AuthRepository> repositoryProvider,
      Provider<SharedPref> sharedPrefProvider, Provider<SignUpDirection> directionProvider) {
    this.repositoryProvider = repositoryProvider;
    this.sharedPrefProvider = sharedPrefProvider;
    this.directionProvider = directionProvider;
  }

  @Override
  public SignUpModel get() {
    return newInstance(repositoryProvider.get(), sharedPrefProvider.get(), directionProvider.get());
  }

  public static SignUpModel_Factory create(Provider<AuthRepository> repositoryProvider,
      Provider<SharedPref> sharedPrefProvider, Provider<SignUpDirection> directionProvider) {
    return new SignUpModel_Factory(repositoryProvider, sharedPrefProvider, directionProvider);
  }

  public static SignUpModel newInstance(AuthRepository repository, SharedPref sharedPref,
      SignUpDirection direction) {
    return new SignUpModel(repository, sharedPref, direction);
  }
}
