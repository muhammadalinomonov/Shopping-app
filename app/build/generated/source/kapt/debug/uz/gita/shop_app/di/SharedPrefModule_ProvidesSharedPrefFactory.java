// Generated by Dagger (https://dagger.dev).
package uz.gita.shop_app.di;

import android.content.Context;
import android.content.SharedPreferences;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SharedPrefModule_ProvidesSharedPrefFactory implements Factory<SharedPreferences> {
  private final SharedPrefModule module;

  private final Provider<Context> contextProvider;

  public SharedPrefModule_ProvidesSharedPrefFactory(SharedPrefModule module,
      Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public SharedPreferences get() {
    return providesSharedPref(module, contextProvider.get());
  }

  public static SharedPrefModule_ProvidesSharedPrefFactory create(SharedPrefModule module,
      Provider<Context> contextProvider) {
    return new SharedPrefModule_ProvidesSharedPrefFactory(module, contextProvider);
  }

  public static SharedPreferences providesSharedPref(SharedPrefModule instance, Context context) {
    return Preconditions.checkNotNullFromProvides(instance.providesSharedPref(context));
  }
}
