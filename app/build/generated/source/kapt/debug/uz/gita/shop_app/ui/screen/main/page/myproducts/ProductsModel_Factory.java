// Generated by Dagger (https://dagger.dev).
package uz.gita.shop_app.ui.screen.main.page.myproducts;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import uz.gita.shop_app.domain.repository.ShopRepository;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ProductsModel_Factory implements Factory<ProductsModel> {
  private final Provider<ShopRepository> repositoryProvider;

  private final Provider<MyProductDirection> directionProvider;

  public ProductsModel_Factory(Provider<ShopRepository> repositoryProvider,
      Provider<MyProductDirection> directionProvider) {
    this.repositoryProvider = repositoryProvider;
    this.directionProvider = directionProvider;
  }

  @Override
  public ProductsModel get() {
    return newInstance(repositoryProvider.get(), directionProvider.get());
  }

  public static ProductsModel_Factory create(Provider<ShopRepository> repositoryProvider,
      Provider<MyProductDirection> directionProvider) {
    return new ProductsModel_Factory(repositoryProvider, directionProvider);
  }

  public static ProductsModel newInstance(ShopRepository repository, MyProductDirection direction) {
    return new ProductsModel(repository, direction);
  }
}
